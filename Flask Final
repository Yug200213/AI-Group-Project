# -*- coding: utf-8 -*-
"""
Created on Fri Apr 22 12:02:48 2022

@author: Yug Patel
"""
#Library
from flask import Flask, request, jsonify
import traceback
import pandas as pd
import joblib
import sys
from sklearn import preprocessing

#Api Definition
app=Flask(__name__)
@app.route("/predict",methods=['GET','POST'])#use decorator pattern for the route
def predict():
    if grid_searchrandom_gp1:
        try:
            json_ = request.json
            print(json_)
            query = pd.get_dummies(pd.DataFrame(json_))
            query = query.reindex(columns=model_columns, fill_value=0)
            print(query)
            # Fit your data on the scaler object
            scaler = preprocessing.StandardScaler()
            X_Test = scaler.fit_transform(query)
            # return to data frame
            query = pd.DataFrame(X_Test, columns=model_columns)
            print(query)
            prediction = list(grid_searchrandom_gp1.predict(query))
            print({'prediction': str(prediction)})
            return jsonify({'prediction': str(prediction)})
            return "Group 1 Prediction"

        except:

            return jsonify({'trace': traceback.format_exc()})
    else:
        print ('Train the model first')
        return ('No model here to use')

if __name__ == '__main__':
    try:
        port = int(sys.argv[1]) # This is for a command-line input
    except:
        port = 12345 # If you don't provide any port the port will be set to 12345

    grid_searchrandom_gp1 = joblib.load('C:/Users/Yug Patel/model.pkl') # Load "model.pkl"
    print ('Model loaded')
    model_columns = joblib.load('C:/Users/Yug Patel/model_columns.pkl') # Load "model_columns.pkl"
    print ('Model columns loaded')
    app.run(port=port, debug=True)
